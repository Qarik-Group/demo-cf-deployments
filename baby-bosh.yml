---
genesis:
  env:         baby-bosh
  min_version: 2.8.4

kit:
  name: cf
  version: 2.2.0-rc.14
  features:
    - postgres-db
    - aws-blobstore
    - small-footprint
    - ssh-proxy-on-routers
    - app-scheduler-integration
    #- no-tcp-routers
    - smb-test-server
    - smb-volume-services
    - smb-volume-services-releases
    - app-autoscaler-integration
    #- apps-trust-redis-dev-crt
    #- routing-api-username
    #- nfs-volume-services
    #- nfs-dev-version
    #- compiled-releases
    #- enable-service-discovery
    ### Windows features
    #- windows-dev-bosh-dns-alias
    #- windows-diego-cells
    - windows-releases
    #- windows-ofline-2019fs
    #- windows-remove-default-network
    #- windows-smoke-tests
    #- prometheus-integration
    - custom-router-group
    #- add-persistent-isolation-segment-diego-cell
    #- add-windows-isolation-segment
    #- app-security-groups
    - cf-mgmt-uaa-client

params:
  external_db_ca: |
    -----BEGIN CERTIFICATE-----
    MIIEBjCCAu6gAwIBAgIJAMc0ZzaSUK51MA0GCSqGSIb3DQEBCwUAMIGPMQswCQYD
    VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi
    MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h
    em9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkw
    ODIyMTcwODUwWhcNMjQwODIyMTcwODUwWjCBjzELMAkGA1UEBhMCVVMxEDAOBgNV
    BAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFtYXpv
    biBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIDAeBgNV
    BAMMF0FtYXpvbiBSRFMgUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOC
    AQ8AMIIBCgKCAQEArXnF/E6/Qh+ku3hQTSKPMhQQlCpoWvnIthzX6MK3p5a0eXKZ
    oWIjYcNNG6UwJjp4fUXl6glp53Jobn+tWNX88dNH2n8DVbppSwScVE2LpuL+94vY
    0EYE/XxN7svKea8YvlrqkUBKyxLxTjh+U/KrGOaHxz9v0l6ZNlDbuaZw3qIWdD/I
    6aNbGeRUVtpM6P+bWIoxVl/caQylQS6CEYUk+CpVyJSkopwJlzXT07tMoDL5WgX9
    O08KVgDNz9qP/IGtAcRduRcNioH3E9v981QO1zt/Gpb2f8NqAjUUCUZzOnij6mx9
    McZ+9cWX88CRzR0vQODWuZscgI08NvM69Fn2SQIDAQABo2MwYTAOBgNVHQ8BAf8E
    BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUc19g2LzLA5j0Kxc0LjZa
    pmD/vB8wHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJKoZIhvcN
    AQELBQADggEBAHAG7WTmyjzPRIM85rVj+fWHsLIvqpw6DObIjMWokpliCeMINZFV
    ynfgBKsf1ExwbvJNzYFXW6dihnguDG9VMPpi2up/ctQTN8tm9nDKOy08uNZoofMc
    NUZxKCEkVKZv+IL4oHoeayt8egtv3ujJM6V14AstMQ6SwvwvA93EP/Ug2e4WAXHu
    cbI1NAbUgVDqp+DRdfvZkgYKryjTWd/0+1fS8X1bBZVWzl7eirNVnHbSH2ZDpNuY
    0SBd8dj5F6ld3t58ydZbrTHze7JJOd8ijySAp4/kiu9UfZWuTPABzDa/DSdz9Dk/
    zPW4CXXvhLmE02TA9/HeCw3KEHIwicNuEfw=
    -----END CERTIFICATE-----


  # Cloud Foundry base domain
  base_domain: codex.starkandwayne.com
  system_domain: system.codex.starkandwayne.com
  apps_domains: apps.codex.starkandwayne.com

  # External PostgreSQL configuration
  external_db_host:     snw-dev-cf-db.cmziohdu4x1g.us-west-2.rds.amazonaws.com
  external_db_username:  ((external_db_user))
  #external_db_password: ((external_db_password))

  # CF Databases
  #uaadb_password:          ((uaa_db_password))
  #ccdb_password:           ((cloud_controller_db_password))
  #diegodb_password:        ((diego_db_password))
  #policyserverdb_password: ((network_policy_db_password))
  #silkdb_password:         ((network_connectivity_db_password))
  #routingapidb_password:   ((routing_api_db_password))
  #locketdb_password:       ((locket_db_password))
  #credhubdb_password:      ((credhub_db_password))

  # External Blobstore
  blobstore_s3_region: us-west-2
  skip_ssl_validation: true # Skip SSL validation since we use self-signed certs
  blobstore_app_packages_directory: codex-uswest2-dev-app-packages
  blobstore_buildpacks_directory:   codex-uswest2-dev-buildpacks
  blobstore_droplets_directory:     codex-uswest2-dev-droplets
  blobstore_resources_directory:    codex-uswest2-dev-resources

  # Skip SSL validation since we use self-signed certs
  skip_ssl_validation: true

  # Instances Scaling
  api_instances: 1
  cc_worker_instances: 1
  credhub_instances: 1
  diego_api_instances:  1
  doppler_instances: 1
  log_api_instances: 1
  nats_instances: 1
  router_instances: 1
  scheduler_instances: 1
  tcp_router_instances: 1
  uaa_instances: 1
  diego_cell_instances: 2
  #windows_diego_cell_instances: 1 # Required for Windows, 3 one for each az
  #windows_diego_cell_vm_type: diego-cell # Required for Windows
  #windows2019_cell_vm_type: cell
  #windows2019_cell_instances: 2

  # Cloud Config instance vm_type mappings
  api_vm_type:        api
  cc_worker_vm_type:  cc-worker
  credhub_vm_type:    credhub
  diego_api_vm_type:  diego-api
  diego_cell_vm_type: diego-cell
  doppler_vm_type:    doppler
  nats_vm_type:       nats
  log_api_vm_type:    log-api
  router_vm_type:     router
  errand_vm_type:     errand
  scheduler_vm_type:  scheduler
  tcp_router_vm_type: tcp-router
  uaa_vm_type:        uaa

instance_groups:
- name: diego-api
  jobs:
  - name: silk-controller
    release: silk
    properties:
      database:
        ca_cert: (( grab params.external_db_ca ))
        require_ssl: true


- name: nats
  jobs:
  - name: nats-tls
    release: nats
    custom_provider_definitions:
      - name: nats-tls-address
        type: address
        #      properties:
        #          - machines

- name: api
  jobs:
  - name: routing-api
    release: routing
    properties:
      routing_api:
        sqldb:
          ca_cert: (( grab params.external_db_ca ))
  - name: policy-server
    release: cf-networking
    properties:
      database:
        ca_cert: (( grab params.external_db_ca ))
        require_ssl: true

- name: router
  vm_extensions:
    - cf-router-network-properties
    #- dev-alb
    #- dev-nlb
- name: diego-cell
  update:
    max_in_flight: 3
- name: uaa
  jobs:
  - name: uaa
    properties:
      uaadb:
        tls: enabled
      uaa:
        ca_certs:
        - (( append ))
        - (( grab params.external_db_ca ))
        clients:
          stratos_apps:
            authorized-grant-types: authorization_code,client_credentials,refresh_token
            redirect-uri: https://apps.dev.codex.starkandwayne.com/pp/vl/auth/sso_login_callback
            autoapprove: true # Bypass users approval
            # The following properties copied from those of the default 'Cf ' client:
            access-token-validity: 1200
            authorities: uaa.none
            override: true
            refresh-token-validity: 2592000
            scope: network.admin,network.write, cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write.doppler.firehose,uaa.user,routing.router_groups.read,routing.router_groups.write,cloud_controller.admin_read_only,cloud_controller.global_auditor,perm.admin,clients.read
            secret: "((stratos_client_secret))"

stemcells:
- alias: default
  os: ubuntu-bionic
  version: latest

variables:
- name: stratos_client_secret
  type: password

releases:
- name: nfs-volume
  version: 7.1.1+dev.1
